#!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent

$exe=""
$env_node_path=$env:NODE_PATH
$env:NODE_PATH="G:\GIT\js\ts-nameof\common\temp\node_modules\.registry.npmjs.org\ts-node\8.10.2\typescript@3.9.10\node_modules\ts-node\dist\bin.js\node_modules;G:\GIT\js\ts-nameof\common\temp\node_modules\.registry.npmjs.org\ts-node\8.10.2\typescript@3.9.10\node_modules\ts-node\dist\node_modules;G:\GIT\js\ts-nameof\common\temp\node_modules\.registry.npmjs.org\ts-node\8.10.2\typescript@3.9.10\node_modules\ts-node\node_modules;G:\GIT\js\ts-nameof\common\temp\node_modules\.registry.npmjs.org\ts-node\8.10.2\typescript@3.9.10\node_modules;G:\GIT\js\ts-nameof\common\temp\node_modules\.registry.npmjs.org\ts-node\8.10.2\node_modules;G:\GIT\js\ts-nameof\common\temp\node_modules\.registry.npmjs.org\ts-node\node_modules;G:\GIT\js\ts-nameof\common\temp\node_modules\.registry.npmjs.org\node_modules;G:\GIT\js\ts-nameof\common\temp\node_modules;G:\GIT\js\ts-nameof\common\node_modules;G:\GIT\js\ts-nameof\node_modules;G:\GIT\js\node_modules;G:\GIT\node_modules;G:\node_modules;G:\GIT\js\ts-nameof\packages\transforms-babel\node_modules\ts-node\dist\bin.js\node_modules;G:\GIT\js\ts-nameof\packages\transforms-babel\node_modules\ts-node\dist\node_modules;G:\GIT\js\ts-nameof\packages\transforms-babel\node_modules\ts-node\node_modules;G:\GIT\js\ts-nameof\packages\transforms-babel\node_modules;G:\GIT\js\ts-nameof\packages\node_modules"
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe"
} else {
  $env:NODE_PATH="/mnt/g/GIT/js/ts-nameof/common/temp/node_modules/.registry.npmjs.org/ts-node/8.10.2/typescript@3.9.10/node_modules/ts-node/dist/bin.js/node_modules:/mnt/g/GIT/js/ts-nameof/common/temp/node_modules/.registry.npmjs.org/ts-node/8.10.2/typescript@3.9.10/node_modules/ts-node/dist/node_modules:/mnt/g/GIT/js/ts-nameof/common/temp/node_modules/.registry.npmjs.org/ts-node/8.10.2/typescript@3.9.10/node_modules/ts-node/node_modules:/mnt/g/GIT/js/ts-nameof/common/temp/node_modules/.registry.npmjs.org/ts-node/8.10.2/typescript@3.9.10/node_modules:/mnt/g/GIT/js/ts-nameof/common/temp/node_modules/.registry.npmjs.org/ts-node/8.10.2/node_modules:/mnt/g/GIT/js/ts-nameof/common/temp/node_modules/.registry.npmjs.org/ts-node/node_modules:/mnt/g/GIT/js/ts-nameof/common/temp/node_modules/.registry.npmjs.org/node_modules:/mnt/g/GIT/js/ts-nameof/common/temp/node_modules:/mnt/g/GIT/js/ts-nameof/common/node_modules:/mnt/g/GIT/js/ts-nameof/node_modules:/mnt/g/GIT/js/node_modules:/mnt/g/GIT/node_modules:/mnt/g/node_modules:/mnt/g/GIT/js/ts-nameof/packages/transforms-babel/node_modules/ts-node/dist/bin.js/node_modules:/mnt/g/GIT/js/ts-nameof/packages/transforms-babel/node_modules/ts-node/dist/node_modules:/mnt/g/GIT/js/ts-nameof/packages/transforms-babel/node_modules/ts-node/node_modules:/mnt/g/GIT/js/ts-nameof/packages/transforms-babel/node_modules:/mnt/g/GIT/js/ts-nameof/packages/node_modules"
}
$ret=0
if (Test-Path "$basedir/node$exe") {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin.js" $args
  } else {
    & "$basedir/node$exe"  "$basedir/../ts-node/dist/bin.js" $args
  }
  $ret=$LASTEXITCODE
} else {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "node$exe"  "$basedir/../ts-node/dist/bin.js" $args
  } else {
    & "node$exe"  "$basedir/../ts-node/dist/bin.js" $args
  }
  $ret=$LASTEXITCODE
}
$env:NODE_PATH=$env_node_path
exit $ret
